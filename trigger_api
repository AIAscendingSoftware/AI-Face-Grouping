from flask import Flask, jsonify, request
import os
import base64
from PIL import Image
import io

app = Flask(__name__)

# Configuration
app.config['API_URL'] = 'http://192.168.29.96:8080/api/facedetection/'
app.config['IMAGE_FOLDER'] = 'src'

# Dummy data for testing
event_ids = [1, 2, 3]
user_ids = {
    1: [1, 2],
    2: [1, 3],
    3: [2, 3]
}

def encrypt_image_to_base64(image_path):
    with open(image_path, "rb") as image_file:
        encoded_string = base64.b64encode(image_file.read())
    return encoded_string.decode('utf-8')

def decrypt_base64_to_image(base64_string, output_path):
    image_data = base64.b64decode(base64_string)
    image = Image.open(io.BytesIO(image_data))
    image.save(output_path)

def get_image_data(event_id, user_id):
    image_path = os.path.join(app.config['IMAGE_FOLDER'], f'event_{event_id}_user_{user_id}.png')
    if os.path.exists(image_path):
        return encrypt_image_to_base64(image_path)
    else:
        return None

@app.route('/getAllEvent', methods=['GET'])
def get_event_ids():
    return jsonify(event_ids), 200

@app.route('/getUserId', methods=['GET'])
def get_user_ids():
    event_id = request.headers.get('Create-by-id')
    if event_id and int(event_id) in user_ids:
        return jsonify(user_ids[int(event_id)]), 200
    else:
        return jsonify({"error": "Invalid event ID"}), 400

@app.route('/getEventFolderImage', methods=['GET'])
def get_event_and_user_image():
    event_id = request.headers.get('Create-by-id')
    user_id = request.json.get('userId')
    
    if event_id and user_id:
        image_data = get_image_data(int(event_id), int(user_id))
        if image_data:
            event_details = {
                "id": int(event_id),
                "image": image_data,
                "eventFolderPath": f"/event_{event_id}",
                "EventId": int(event_id),
                "OrgId": 1,
                "ImageName": f"event_{event_id}_user_{user_id}.png"
            }
            user_details = {
                "id": int(user_id),
                "image": image_data,
                "UserId": int(user_id)
            }
            data = {
                "EventImages": event_details,
                "UserImages": user_details
            }
            return jsonify(data), 200
        else:
            return jsonify({"error": "Image not found"}), 404
    else:
        return jsonify({"error": "Invalid event ID or user ID"}), 400

@app.route('/setuserEventImage', methods=['POST'])
def post_data():
    data_list = request.get_json()
    if data_list:
        # Process the data_list here
        return jsonify({'message': 'Data posted successfully'}), 200
    else:
        return jsonify({'error': 'Failed to post data'}), 400

if __name__ == '__main__':
    app.run(host='192.168.29.96', port=5000, debug=True)